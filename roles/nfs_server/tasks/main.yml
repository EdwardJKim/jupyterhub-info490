---
- name: install nfs pakcages
  yum: name=nfs-utils,nfs-utils-lib state=latest

- name: stop nfs
  service: name=nfs state=stopped

- name: stop rpcbind
  service: name=rpcbind state=stopped

- name: unmount existing volumes
  shell: umount /mnt/volume || true

- name: create a ext4 filesystem on /dev/sdb
  filesystem: fstype=ext4 dev=/dev/sdb

- name: create mount directory
  file: name=/mnt/volume state=directory

- name: mount storage volume
  mount: name=/mnt/volume src=/dev/sdb fstype=ext4 state=mounted

- name: bind mount to export directory
  mount: name=/export src=/mnt/volume fstype=none opts=bind state=mounted

- name: install /etc/exports
  template: src=exports dest=/etc/exports mode=0644

- name: start rpcbind
  service: name=rpcbind state=started

- name: create /export/home
  file: path=/export/home state=directory

- name: create /export/exchange
  file: path=/export/exchange state=directory

- name: create home directories
  file: path=/mnt/volume/home/{{ item }} state=directory group=100 owner=1000 recurse=yes
  with_items:
  - "{{ jupyterhub_admins }}"
  - "{{ jupyterhub_users }}"
  tags:
  - add_users

- name: create exchange directories
  file: path=/mnt/volume/exchange/{{ item }}/{{ course_id }} state=directory group=100 owner=1000 recurse=yes
  with_items:
  - "{{ jupyterhub_admins }}"
  - "{{ jupyterhub_users }}"
  tags:
  - add_users

- name: create exchange/inbound directories
  file: path=/mnt/volume/exchange/{{ item }}/{{ course_id }}/inbound state=directory group=root owner=root mode=0733 recurse=yes
  with_items:
  - "{{ jupyterhub_admins }}"
  - "{{ jupyterhub_users }}"
  tags:
  - add_users

- name: create exchange/outbound directories
  file: path=/mnt/volume/exchange/{{ item }}/{{ course_id }}/outbound state=directory group=root owner=root mode=0755 recurse=yes
  with_items:
  - "{{ jupyterhub_admins }}"
  - "{{ jupyterhub_users }}"
  tags:
  - add_users

- name: create shared directory
  file: path=/mnt/volume/shared state=directory group=root owner=root recurse=yes

- name: git clone course_id repo
  git: repo={{github_repo}} dest=/mnt/volume/shared/{{course_id}}

- name: start nfs-server
  service: name=nfs state=started
