---
- fail: msg="docker_ca_cert is undefined"
  when: docker_ca_cert == ''

- fail: msg="docker_tls_cert is undefined"
  when: docker_tls_cert == ''

- fail: msg="docker_tls_key is undefined"
  when: docker_tls_key == ''

- name: update apt-transport-https
  apt: name=apt-transport-https state=latest

- name: update ca-certificates
  apt: name=ca-certificates state=latest

- name: add new GPG key
  apt_key: keyserver=hkp://p80.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D

- name: add docker repo
  shell: sh -c 'echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" > /etc/apt/sources.list.d/docker.list'

- name: install docker engine
  apt: name=docker-engine update_cache=yes state=latest

- name: create docker TLS directory
  file: path=/root/.docker state=directory group=root owner=root mode=0700

- name: install docker TLS certificates
  template: src={{ item.from }} dest={{ item.to }} mode=0600
  with_items:
    - from: ca.pem.j2
      to: /root/.docker/ca.pem
    - from: cert.pem.j2
      to: /root/.docker/cert.pem
    - from: key.pem.j2
      to: /root/.docker/key.pem

- name: docker-py
  pip: name=docker-py state=present version=1.1.0

- name: stop running docker containers
  shell: docker stop $(docker ps -a -q) || true

- name: remove docker containers
  shell: docker rm -v $(docker ps -a -q) || true

- name: run docker cleanup cronjob
  cron: name="docker cleanup" minute=15 user="root" job="/usr/bin/docker rmi $(/usr/bin/docker images -q --filter 'dangling=true')"

- name: install docker-compose
  shell: curl -L https://github.com/docker/compose/releases/download/1.5.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose

- name: make docker-compose executable
  file: path=/usr/local/bin/docker-compose mode="u+x"

- name: set DOCKER_HOST
  lineinfile: dest=/etc/environment state=present line="DOCKER_HOST=tcp://{{ private_ip }}:2375"

- name: set DOCKER_TLS_VERIFY
  lineinfile: dest=/etc/environment state=present line="DOCKER_TLS_VERIFY=1"

- name: copy systemd configuration file
  template: src=docker.j2 dest=/etc/default/docker

- name: stop docker daemon
  service: name=docker state=stopped

# cloning VMs will result in duplicate keys
# restarting docker service will regenerate the keys
- name: remove /etc/docker/key.json
  file: path=/etc/docker/key.json state=absent

- name: start docker daemon
  service: name=docker state=started
